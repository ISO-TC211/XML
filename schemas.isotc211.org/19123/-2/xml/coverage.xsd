<?xml version="1.0" encoding="UTF-8"?>
<schema targetNamespace="https://schemas.isotc211.org/19123/-2/cis/2.0"
    xmlns:cis20="https://schemas.isotc211.org/19123/-2/cis/2.0"
    xmlns:gml="http://www.opengis.net/gml/3.2"
    xmlns:swe="http://www.opengis.net/swe/2.0"
    xmlns="http://www.w3.org/2001/XMLSchema"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    elementFormDefault="qualified"
    version="2.0.0">
    <annotation>
        <appinfo>coverage.xsd</appinfo>
        <documentation>Component of ISO 19123-2 Coverage Implementation Schema.
        Last updated: 2024-sep-08
        </documentation>
    </annotation>

    <!-- ============================================================= -->
    <!-- Includes and imports                                          -->
    <!-- ============================================================= -->
    <import namespace="http://www.opengis.net/gml/3.2" schemaLocation="http://schemas.opengis.net/gml/3.2.1/gml.xsd"/>
    <import namespace="http://www.opengis.net/swe/2.0" schemaLocation="http://schemas.opengis.net/sweCommon/2.0/swe.xsd"/>
    <include schemaLocation="grid.xsd"/>

    <!-- ============================================================= -->
    <!-- Abstract Coverages                                            -->
    <!-- ============================================================= -->
    <element name="AbstractCoverage" type="cis20:AbstractCoverageType" abstract="true" substitutionGroup="gml:AbstractFeature">
        <annotation>
            <documentation>cis20:AbstractCoverage is the abstract superclass for the CIS 1.1 coverage structures.</documentation>
        </annotation>
    </element>
    <complexType name="AbstractCoverageType">
        <complexContent>
            <extension base="gml:AbstractFeatureType">
                <sequence>
                    <element name="CoverageFunction" type="gml:CoverageFunctionType" minOccurs="0"/>
                    <element ref="cis20:Envelope" minOccurs="0"/>
                    <choice>
                        <sequence>
                            <element ref="cis20:DomainSet"/>
                            <element ref="cis20:RangeSet"/>
                        </sequence>
                        <element ref="cis20:PartitionSet"/>
                    </choice>
                    <element ref="cis20:RangeType"/>
                    <element ref="cis20:Metadata" minOccurs="0"/>
                </sequence>
            </extension>
        </complexContent>
    </complexType>
    <!-- ============================================================= -->
    <element name="Envelope" type="cis20:EnvelopeByAxisType">
        <annotation>
            <documentation>The envelope around a coverage is defined by the lower and upper bound of each axis, respectively. The purpose of the axisLabels attribute, which lists the axis labels of all AxisExtent elements in proper sequence, is to enforce axis sequence also in XML systems which do not preserve document order.</documentation>
        </annotation>
    </element>
    <complexType name="EnvelopeByAxisType">
        <sequence>
            <element name="AxisExtent" maxOccurs="unbounded">
                <complexType>
                    <attribute name="axisLabel" type="NCName" use="required"/>
                    <attribute name="uomLabel" type="NCName" use="required"/>
                    <attribute name="lowerBound" type="anySimpleType" use="required"/>
                    <attribute name="upperBound" type="anySimpleType" use="required"/>
                </complexType>
            </element>
        </sequence>
        <attribute name="srsName" type="anyURI" use="required"/>
        <attribute name="axisLabels" type="cis20:NameListType" use="required"/>
    </complexType>
    <!-- ============================================================= -->
    <element name="DomainSet" type="cis20:DomainSetType">
        <annotation>
            <documentation>The DomainSet describes the "direct positions" of the coverage, i.e., the locations for which values are available. The structure chosen depends on the type of coverage.</documentation>
        </annotation>
    </element>
    <complexType name="DomainSetType">
        <sequence>
            <choice>
                <element ref="cis20:MultiPoint"/>
                <element ref="cis20:GeneralGridCoverage"/>
                <element ref="cis20:MultiCurveCoverage"/>
                <element ref="cis20:MultiSurfaceCoverage"/>
                <element ref="cis20:MultiSolidCoverage"/>
                <element ref="cis20:Model"/>
            </choice>
        </sequence>
        <attribute name="srsName" type="string" use="required"/>
        <attribute name="axisLabels" type="cis20:NameListType" use="required"/>
        <attribute name="uomLabels" type="cis20:NameListType" use="required"/>
    </complexType>
    <!-- ============================================================= -->
    <element name="RangeType" type="cis20:RangeTypeType">
        <annotation>
            <documentation>The RangeType element describes the structure and semantics of a coverage's range values, including (optionally) restrictions on the interpolation allowed on such values.</documentation>
        </annotation>
    </element>
    <complexType name="RangeTypeType">
        <sequence>
            <element ref="swe:DataRecord"/>
            <element name="InterpolationRestriction" type="cis20:InterpolationRestrictionType" minOccurs="0"/>
        </sequence>
    </complexType>
    <complexType name="InterpolationRestrictionType">
        <sequence>
            <element name="AllowedInterpolation" type="anyURI" minOccurs="0" maxOccurs="unbounded"/>
        </sequence>
    </complexType>
    <!-- ============================================================= -->
    <element name="RangeSet" type="cis20:RangeSetType">
        <annotation>
            <documentation>The RangeSet lists a value for each of the coverage's direct positions. Values resemble the "payload" information of some particular direct positions. Values can be composite (with a single nesting level, i.e.: composites always consist of atomics), or atomic (emulated through single-component composites) whereby the sequence, structure, and meaning of every value is defined through the RangeType. Values can be represented in GML or by reference to an external file which may have any suitable encoding. For efficiency reason, tag names are kept terse: "cv" for "composite value", "av" for "atomic value".</documentation>
        </annotation>
    </element>
    <complexType name="RangeSetType">
        <sequence>
        <element name="DataBlock">
            <complexType>
                <choice maxOccurs="unbounded">
                    <element ref="cis20:CV" maxOccurs="unbounded"/>
                    <element ref="cis20:V" maxOccurs="unbounded"/>
                </choice>
            </complexType>
         </element>
        </sequence>
    </complexType>
    <element name="CV" type="cis20:CompositeRangeValueType">
        <annotation>
            <documentation>Composite values consist of lists of values, implementing the SWE::DataRecord records and arrays in a flattened way (i.e., there is only one level of nesting, even for multiple-nested records). Values can be of any kind, such as numeric or categorial (e.g., "true" and "false"). </documentation>
        </annotation>
    </element>
    <complexType name="CompositeRangeValueType">
        <sequence>
            <element ref="cis20:V" maxOccurs="unbounded"/>
        </sequence>
    </complexType>
    <element name="V" type="anySimpleType">
        <annotation>
            <documentation>Atomic Range Values consist of single, atomic values; these can be of any kind, such as numeric, date, or categorial (e.g., "true" and "false"). </documentation>
        </annotation>
    </element>
    <!-- ============================================================= -->
    <element name="PartitionSet" type="cis20:PartitionSetType">
        <annotation>
            <documentation>A partition describes how a coverage ("sub-coverage") referenced is located within referencing coverage ("super-coverage"). The sub-coverage can be represented by referencing a coverage id or a URL pointing to a coverage.  Such sub-coverages referenced may be grouped into the super-coverage document, or reside remote, or mixed.
As an additional alternative, single range values can be indicated verbatimg, together with their direct position. All values must share an identical structure and conform to the rangeType definition. For compactness reason, frequently repeated tag names are kept terse: "pv" for "positionValuePair", "p" for "directPosition" "v" for "value".</documentation>
        </annotation>
    </element>
    <complexType name="PartitionSetType">
        <choice>
            <element name="Partition" type="cis20:PartitionType" maxOccurs="unbounded"/>
            <element name="PV" type="cis20:PositionValuePairType" maxOccurs="unbounded"/>
        </choice>
    </complexType>
    <complexType name="PartitionType">
        <sequence>
            <element ref="cis20:Envelope"/>
            <choice>
                <element ref="cis20:AbstractCoverage"/>
                <element name="CoverageId" type="string"/>
                <element name="CoverageRef" type="anyURI"/>
            </choice>
        </sequence>
    </complexType>
    <complexType name="PositionValuePairType">
        <annotation>
            <documentation>Direct positions resemble n-D coordinates indicating where a coverage provides values; single (1D coordinates are provided as Direct Coordinates, n-tuples as Direct Positions. Following the same pattern, a value can be atomic (i.e., a string) or a composite value. This pattern is introduced to make representation of single values more convenient and efficient. Likewise for efficiency reason, frequently repeated tag names are kept terse: "P" for "direct position", "CV" for "composite value".</documentation>
        </annotation>
        <sequence>
            <choice>
                <element name="P" type="cis20:DirectPositionPointType"/>
                <element name="C" type="anySimpleType"/>
            </choice>
            <choice>
                <element name="CV" type="cis20:CompositeRangeValueType"/>
                <element name="V" type="anySimpleType"/>
            </choice>
        </sequence>
    </complexType>

    <!-- ============================================================== -->
    <complexType name="DirectPositionPointType">
        <annotation>
            <documentation>Direct position points resemble n-D coordinates indicating where a coverage provides values. For efficiency reason, frequently repeated tag names are kept terse, such as "C" for "DirectCoordinate". To accommodate all possible coordinate types (such as "1.2" for degrees, "2016-02-29" for dates, etc.) the type is anySimpleType as opposed to GML which only allows numbers.</documentation>
        </annotation>
        <sequence>
            <element name="C" type="anySimpleType" maxOccurs="unbounded"/>
        </sequence>
    </complexType>

    <!-- ============================================================= -->
    <element name="Metadata" type="cis20:MetadataType">
        <annotation>
            <documentation>The metadata element is a container of any (not further specified) information which should be transported along with the coverage on hand, such as domain-specific metadata.</documentation>
        </annotation>
    </element>
    <complexType name="MetadataType">
        <sequence>
            <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </sequence>
    </complexType>

    <!-- ============================================================= -->
    <!-- General Grid Coverages                                        -->
    <!-- ============================================================= -->
    <element name="GeneralGridCoverage" type="cis20:GeneralGridCoverageType" substitutionGroup="cis20:AbstractCoverage">
        <annotation>
            <documentation>A GeneralGridCoverage is a specialization of AbstractCoverage where the DomainSet is given by a GeneralGrid; its grid axes can be of different types (non-referenced, regular, irregular, algorithmic, etc.).</documentation>
        </annotation>
    </element>
    <complexType name="GeneralGridCoverageType">
        <complexContent>
            <extension base="cis20:AbstractCoverageType"/>
        </complexContent>        
    </complexType>

 

    <element name="SensorModelCoverage" type="cis20:GeneralGridCoverageType" substitutionGroup="cis20:GeneralGridCoverage">
        <annotation>
            <documentation>A coverage whose domain set is given by a grid defined through a SensorML 2.0 transformation model, represented by a TransformationBySensorModel element.</documentation>
        </annotation>
    </element>


    <!-- ============================================================= -->
    <!-- MultiPoint Coverages                                          -->
    <!-- ============================================================= -->
    <element name="MultiPointCoverage" type="cis20:MultiPointCoverageType" substitutionGroup="cis20:AbstractCoverage">
        <annotation>
            <documentation>In a MultiPointCoverage (i.e., point cloud) the DomainSet consists of a MultiPoint, i.e.: a collection of points.</documentation>
        </annotation>
    </element>
    <complexType name="MultiPointCoverageType">
        <complexContent>
            <extension base="cis20:AbstractCoverageType"/>
        </complexContent>
    </complexType>
    <element name="MultiPoint" type="cis20:MultiPointType">
        <annotation>
            <documentation>A MultiPoint consist of a list of arbitrary direct positions (normally not aligned on a grid). By using the CIS direct position concept instead of GML, non-numerical coordinates (such as date and time stamps) are possible.</documentation>
        </annotation>
    </element>
    <complexType name="MultiPointType">
        <sequence>
            <element name="P" type="cis20:DirectPositionPointType" maxOccurs="unbounded"/>
        </sequence>
    </complexType>

    <!-- ============================================================= -->
    <!-- MultiCurve Coverages                                          -->
    <!-- ============================================================= -->
    <element name="MultiCurveCoverage" type="cis20:MultiCurveCoverageType" substitutionGroup="cis20:AbstractCoverage">
        <annotation>
            <documentation>In a MultiCurveCoverage the DomainSet consists of a MultiCurve (enforced via schematron rule).</documentation>
        </annotation>
    </element>
    <complexType name="MultiCurveCoverageType">
        <complexContent>
            <extension base="cis20:AbstractCoverageType"/>
        </complexContent>
    </complexType>


    <!-- ============================================================= -->
    <!-- MultiSurface Coverages                                        -->
    <!-- ============================================================= -->
    <element name="MultiSurfaceCoverage" type="cis20:MultiSurfaceCoverageType" substitutionGroup="cis20:AbstractCoverage">
        <annotation>
            <documentation>In a MultiSurfaceCoverage the DomainSet consists of a MultiSurface (enforced via schematron rule).</documentation>
        </annotation>
    </element>
    <complexType name="MultiSurfaceCoverageType">
        <complexContent>
            <extension base="cis20:AbstractCoverageType"/>
        </complexContent>
    </complexType>


    <!-- ============================================================= -->
    <!-- MultiSolid Coverages                                          -->
    <!-- ============================================================= -->
    <element name="MultiSolidCoverage" type="cis20:MultiSolidCoverageType" substitutionGroup="cis20:AbstractCoverage">
        <annotation>
            <documentation>In a MultiSolidCoverage the DomainSet consists of a MultiSolid (enforced via schematron rule).</documentation>
        </annotation>
    </element>
    <complexType name="MultiSolidCoverageType">
        <complexContent>
            <extension base="cis20:AbstractCoverageType"/>
        </complexContent>
    </complexType>

</schema>

